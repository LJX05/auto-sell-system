<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.Mapper.GoodsMapper" >
    <resultMap id="goodsResultMap" type="Goods">
        <result property="goods_name" column="goods_name"/>
        <result property="goods_number" column="goods_number"/>
        <result property="goods_price" column="goods_price"/>
        <result property="goods_id" column="goods_id"/>
    </resultMap> 
    <select id="selectGoods" parameterType="String" resultMap="goodsResultMap">
        SELECT * 
        FROM goods
        WHERE goods_id = #{id}
    </select> 
     <select id="findCount"  resultType="int">
        SELECT count(1)
        FROM goods
    </select>
    <select id="foundAll"  resultMap="goodsResultMap">
        SELECT  goods_id , goods_name,goods_number,goods_price 
        FROM goods 
    </select> 
    <select id="findPage"   resultMap="goodsResultMap">
        SELECT * FROM goods limit #{pagenum},#{size}
    </select> 
    <insert id="addGoods" parameterType="Goods">
        insert into
        goods(goods_id , goods_name,goods_number,goods_price )
        values(#{goods_id},#{goods_name},#{goods_number},#{goods_price})
    </insert>
    <update id="update" parameterType="Goods" >
        update goods  set goods_name = #{goods_name},goods_number = #{goods_number},goods_price=#{goods_price} where goods_id=#{goods_id} 
    </update>
    
    <delete  id="delete" parameterType="java.util.List" >
<!--        需要传数组时，一般为java.util.List做参数，-->   
        <!-- forEach : 用来循环 collection : 用来指定循环的数据的类型 可以填的值有：array,list,map item 
	: 循环中为每个循环的数据指定一个别名 index : 循环中循环的下标 open : 开始 close : 结束 separator : 数组中元素之间的分隔符 -->
	delete from goods where goods_id in
        <foreach collection="array" item="ids" index="no" open="(" separator=","  close=")" >
	  #{ids}
	</foreach>        
      </delete>
</mapper>

